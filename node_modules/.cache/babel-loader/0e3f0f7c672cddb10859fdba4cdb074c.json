{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\wanna-type\\\\src\\\\Components\\\\Board\\\\FinishBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport style from './FinishBoard.module.css';\nimport reload from '../../assets/img/reload.png';\nimport boardArrow from '../../assets/img/boardArrow.png';\nimport { Link } from 'react-router-dom';\nimport { tipsCollection } from '../../common/tipsCollection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FinishBoard = props => {\n  _s();\n\n  const [arrowLeft, changeLeftUrl] = React.useState('#');\n  const [arrowRight, changeRightUrl] = React.useState('#');\n\n  const reloadLesson = () => {\n    props.reloadLesson();\n  };\n\n  const randomTip = () => {\n    return tipsCollection[Math.floor(Math.random() * tipsCollection.length)];\n  };\n\n  const decrementChapter = () => {//     let currentUrl = window.location.pathname;\n    //     if (currentUrl === '/lesson-1/chapter-1') {\n    //         return '#'\n    //     } else {\n    //         let pastChapter = currentUrl.slice(18).replace('-', '');\n    //         pastChapter = --pastChapter;\n    //         return currentUrl.slice(0, 18) + pastChapter;\n    //     }\n  };\n\n  const incrementChapter = () => {//     let currentUrl = window.location.pathname;\n    //     if (currentUrl === 'lesson-13/chapter-15') {\n    //         return '#'\n    //     } else {\n    //         let nextChapter = currentUrl.slice(18).replace('-', '');\n    //         nextChapter = ++nextChapter;\n    //         return currentUrl.slice(0, 18) + nextChapter;\n    //     }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.boardBox,\n    children: [props.isPassed ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Congratulation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Try again?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 58\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: reload,\n      onClick: reloadLesson,\n      className: style.reloadIcon,\n      alt: \"reload icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), props.lessonInfo.type === 'lesson' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: arrowLeft,\n        onClick: reloadLesson,\n        className: style.arrowLeftLink,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: boardArrow,\n          alt: \"arrow left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 97\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: arrowRight,\n        onClick: reloadLesson,\n        className: style.arrowRightLink,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: boardArrow,\n          alt: \"arrow right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 99\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.tips,\n      children: randomTip()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FinishBoard, \"pjmDz8Kby7Aq5xRFSpc3uc9tk64=\");\n\n_c = FinishBoard;\nexport default FinishBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishBoard\");","map":{"version":3,"sources":["C:/projects/wanna-type/src/Components/Board/FinishBoard.jsx"],"names":["React","style","reload","boardArrow","Link","tipsCollection","FinishBoard","props","arrowLeft","changeLeftUrl","useState","arrowRight","changeRightUrl","reloadLesson","randomTip","Math","floor","random","length","decrementChapter","incrementChapter","boardBox","isPassed","reloadIcon","lessonInfo","type","arrowLeftLink","arrowRightLink","tips"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,cAAT,QAA+B,6BAA/B;;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAYC,aAAZ,IAA6BT,KAAK,CAACU,QAAN,CAAe,GAAf,CAAnC;AACA,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BZ,KAAK,CAACU,QAAN,CAAe,GAAf,CAArC;;AAEA,QAAMG,YAAY,GAAG,MAAM;AACvBN,IAAAA,KAAK,CAACM,YAAN;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpB,WAAOT,cAAc,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,cAAc,CAACa,MAA1C,CAAD,CAArB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM,CAC3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAVD;;AAYA,QAAMC,gBAAgB,GAAG,MAAM,CAC3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAVD;;AAYA,sBAEI;AAAK,IAAA,SAAS,EAAEnB,KAAK,CAACoB,QAAtB;AAAA,eACKd,KAAK,CAACe,QAAN,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB,gBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADjD,eAEI;AAAK,MAAA,GAAG,EAAEpB,MAAV;AAAkB,MAAA,OAAO,EAAEW,YAA3B;AAAyC,MAAA,SAAS,EAAEZ,KAAK,CAACsB,UAA1D;AAAsE,MAAA,GAAG,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIKhB,KAAK,CAACiB,UAAN,CAAiBC,IAAjB,KAA0B,QAA1B,iBACG;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEjB,SAAV;AAAqB,QAAA,OAAO,EAAEK,YAA9B;AAA4C,QAAA,SAAS,EAAEZ,KAAK,CAACyB,aAA7D;AAAA,+BAA4E;AAAK,UAAA,GAAG,EAAEvB,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEQ,UAAV;AAAsB,QAAA,OAAO,EAAEE,YAA/B;AAA6C,QAAA,SAAS,EAAEZ,KAAK,CAAC0B,cAA9D;AAAA,+BAA8E;AAAK,UAAA,GAAG,EAAExB,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBALR,eAWI;AAAK,MAAA,SAAS,EAAEF,KAAK,CAAC2B,IAAtB;AAAA,gBAA6Bd,SAAS;AAAtC;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH,CAtDD;;GAAMR,W;;KAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport style from './FinishBoard.module.css';\r\nimport reload from '../../assets/img/reload.png';\r\nimport boardArrow from '../../assets/img/boardArrow.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { tipsCollection } from '../../common/tipsCollection';\r\n\r\n\r\nconst FinishBoard = (props) => {\r\n\r\n    const [arrowLeft, changeLeftUrl] = React.useState('#');\r\n    const [arrowRight, changeRightUrl] = React.useState('#');\r\n\r\n    const reloadLesson = () => {\r\n        props.reloadLesson();\r\n    }\r\n\r\n    const randomTip = () => {\r\n        return tipsCollection[Math.floor(Math.random() * tipsCollection.length)];\r\n    }\r\n\r\n    const decrementChapter = () => {\r\n        //     let currentUrl = window.location.pathname;\r\n\r\n        //     if (currentUrl === '/lesson-1/chapter-1') {\r\n        //         return '#'\r\n        //     } else {\r\n        //         let pastChapter = currentUrl.slice(18).replace('-', '');\r\n        //         pastChapter = --pastChapter;\r\n        //         return currentUrl.slice(0, 18) + pastChapter;\r\n        //     }\r\n    }\r\n\r\n    const incrementChapter = () => {\r\n        //     let currentUrl = window.location.pathname;\r\n\r\n        //     if (currentUrl === 'lesson-13/chapter-15') {\r\n        //         return '#'\r\n        //     } else {\r\n        //         let nextChapter = currentUrl.slice(18).replace('-', '');\r\n        //         nextChapter = ++nextChapter;\r\n        //         return currentUrl.slice(0, 18) + nextChapter;\r\n        //     }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.boardBox}>\r\n            {props.isPassed ? <h2>Congratulation!</h2> : <h2>Try again?</h2>}\r\n            <img src={reload} onClick={reloadLesson} className={style.reloadIcon} alt='reload icon' />\r\n\r\n            {props.lessonInfo.type === 'lesson' &&\r\n                <>\r\n                    <Link to={arrowLeft} onClick={reloadLesson} className={style.arrowLeftLink}><img src={boardArrow} alt='arrow left' /></Link>\r\n                    <Link to={arrowRight} onClick={reloadLesson} className={style.arrowRightLink}><img src={boardArrow} alt='arrow right' /></Link>\r\n                </>\r\n                }\r\n\r\n            <div className={style.tips}>{randomTip()}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FinishBoard;"]},"metadata":{},"sourceType":"module"}