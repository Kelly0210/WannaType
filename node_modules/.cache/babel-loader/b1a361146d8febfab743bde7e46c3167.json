{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\wanna-type\\\\src\\\\Components\\\\CustomInput\\\\CustomInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as PropTypes from 'prop-types';\nimport FinishBoard from '../Board/FinishBoard';\nimport style from './CustomInput.module.css';\nimport ChangeLayout from '../common/ChangeLayout';\nimport DisplayText from '../Display/DisplayText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allowedSymbols = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', ',', '.', `'`, ' ', ';', ':'];\n\nconst CustomInput = props => {\n  _s();\n\n  const [isDisabled, handleDisable] = React.useState(false);\n  const [changeLayout, changeLayoutHandler] = React.useState(false);\n  const [result, changeResult] = React.useState(false);\n  const [msPassed, msPassedHandler] = React.useState(0);\n  const [value, changeValue] = React.useState(''); // React.useEffect(() => {\n  //     if (value.length === 1) {\n  //         msPassedHandler(new Date().getTime());\n  //         var interval = setInterval(() => { charactersPerMinute() }, 3000);\n  //     };\n  //     return () => clearInterval(interval);\n  // });\n\n  const handleChange = event => {\n    changeValue(event.target.value);\n    console.log(value);\n    props.passLastLetter(value.slice(-1));\n\n    if (allowedSymbols.includes(value.slice(-1))) {\n      handleMistake();\n      handleComplete();\n      completionPercentage();\n      charactersPerMinute();\n    } else {\n      changeLayoutHandler(true);\n      console.log(value); // handleDisable(true);\n    }\n  };\n\n  const handleMistake = () => {\n    if (props.numberOfMistake === 2) {\n      handleDisable(true);\n    }\n\n    if (value.slice(-1) !== props.generatedText[value.length - 1]) {\n      props.mistakeCounter();\n      props.handleMistake(true);\n    } else {\n      props.handleMistake(false);\n    }\n  };\n\n  const completionPercentage = () => {\n    let percentage = Math.ceil(value.length / props.generatedText.length * 100);\n    props.completionPercentage(percentage);\n  };\n\n  const charactersPerMinute = () => {\n    let timePassedMs = new Date().getTime();\n    let timePassedMin = (timePassedMs - msPassed) / 1000 / 60;\n    let cpm = Math.ceil(value.length / timePassedMin);\n    props.charactersPerMinute(cpm);\n  };\n\n  const handleComplete = () => {\n    if (value.length === props.generatedText.length) {\n      changeResult(true);\n      handleDisable(true);\n    }\n  };\n\n  const reloadLesson = () => {\n    msPassedHandler(0);\n    handleDisable(false);\n    changeResult(false);\n    changeValue('');\n    props.reloadLesson();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.InputBox,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      value: value,\n      disabled: isDisabled,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayText, {\n      generatedText: props.generatedText,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), isDisabled && /*#__PURE__*/_jsxDEV(FinishBoard, {\n      result: result,\n      reloadLesson: reloadLesson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 28\n    }, this), changeLayout && /*#__PURE__*/_jsxDEV(ChangeLayout, {\n      layoutHandler: changeLayoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomInput, \"OxoanmFgwT74NxUzYCwv4n4oLsw=\");\n\n_c = CustomInput;\nexport default CustomInput; // let finishText = document.getElementById('finishText');\n// let leftText = document.getElementById('leftText');\n// let inputField = document.getElementById('inputField');\n// finishText.textContent = '';\n// leftText.textContent = '';\n// inputField.value = '';\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["C:/projects/wanna-type/src/Components/CustomInput/CustomInput.jsx"],"names":["React","PropTypes","FinishBoard","style","ChangeLayout","DisplayText","allowedSymbols","CustomInput","props","isDisabled","handleDisable","useState","changeLayout","changeLayoutHandler","result","changeResult","msPassed","msPassedHandler","value","changeValue","handleChange","event","target","console","log","passLastLetter","slice","includes","handleMistake","handleComplete","completionPercentage","charactersPerMinute","numberOfMistake","generatedText","length","mistakeCounter","percentage","Math","ceil","timePassedMs","Date","getTime","timePassedMin","cpm","reloadLesson","InputBox"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,IAAIC,cAAc,GAAG,CACjB,GADiB,EACZ,GADY,EACP,GADO,EACF,GADE,EACG,GADH,EACQ,GADR,EACa,GADb,EACkB,GADlB,EACuB,GADvB,EAC4B,GAD5B,EAEjB,GAFiB,EAEZ,GAFY,EAEP,GAFO,EAEF,GAFE,EAEG,GAFH,EAEQ,GAFR,EAEa,GAFb,EAEkB,GAFlB,EAEuB,GAFvB,EAE4B,GAF5B,EAGjB,GAHiB,EAGZ,GAHY,EAGP,GAHO,EAGF,GAHE,EAGG,GAHH,EAGQ,GAHR,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,EAIF,GAJE,EAIG,GAJH,EAIQ,GAJR,EAIa,GAJb,EAIkB,GAJlB,EAIuB,GAJvB,EAI4B,GAJ5B,EAKjB,GALiB,EAKZ,GALY,EAKP,GALO,EAKF,GALE,EAKG,GALH,EAKQ,GALR,EAKa,GALb,EAKkB,GALlB,EAKuB,GALvB,EAK4B,GAL5B,EAMjB,GANiB,EAMZ,GANY,EAMP,GANO,EAMF,GANE,EAMG,GANH,EAMQ,GANR,EAOjB,GAPiB,EAOZ,GAPY,EAOP,GAPO,EAOF,GAPE,EAOG,GAPH,EAOQ,GAPR,EAOa,GAPb,EAOkB,GAPlB,EAOuB,GAPvB,EAO4B,GAP5B,EAQjB,GARiB,EAQZ,GARY,EAQN,GARM,EAQF,GARE,EAQG,GARH,EAQQ,GARR,CAArB;;AAWA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACW,QAAN,CAAe,KAAf,CAApC;AACA,QAAM,CAACC,YAAD,EAAeC,mBAAf,IAAsCb,KAAK,CAACW,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAACG,MAAD,EAASC,YAAT,IAAyBf,KAAK,CAACW,QAAN,CAAe,KAAf,CAA/B;AACA,QAAM,CAACK,QAAD,EAAWC,eAAX,IAA8BjB,KAAK,CAACW,QAAN,CAAe,CAAf,CAApC;AACA,QAAM,CAACO,KAAD,EAAQC,WAAR,IAAuBnB,KAAK,CAACW,QAAN,CAAe,EAAf,CAA7B,CAL2B,CAO3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAV,IAAAA,KAAK,CAACiB,cAAN,CAAqBP,KAAK,CAACQ,KAAN,CAAY,CAAC,CAAb,CAArB;;AAEA,QAAIpB,cAAc,CAACqB,QAAf,CAAwBT,KAAK,CAACQ,KAAN,CAAY,CAAC,CAAb,CAAxB,CAAJ,EAA8C;AAC1CE,MAAAA,aAAa;AACbC,MAAAA,cAAc;AACdC,MAAAA,oBAAoB;AACpBC,MAAAA,mBAAmB;AAEtB,KAND,MAMO;AACHlB,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAFG,CAGH;AACH;AACJ,GAhBD;;AAkBA,QAAMU,aAAa,GAAG,MAAM;AACxB,QAAIpB,KAAK,CAACwB,eAAN,KAA0B,CAA9B,EAAiC;AAC7BtB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AAED,QAAIQ,KAAK,CAACQ,KAAN,CAAY,CAAC,CAAb,MAAoBlB,KAAK,CAACyB,aAAN,CAAoBf,KAAK,CAACgB,MAAN,GAAe,CAAnC,CAAxB,EAA+D;AAC3D1B,MAAAA,KAAK,CAAC2B,cAAN;AACA3B,MAAAA,KAAK,CAACoB,aAAN,CAAoB,IAApB;AACH,KAHD,MAGO;AACHpB,MAAAA,KAAK,CAACoB,aAAN,CAAoB,KAApB;AACH;AACJ,GAXD;;AAaA,QAAME,oBAAoB,GAAG,MAAM;AAC/B,QAAIM,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUpB,KAAK,CAACgB,MAAN,GAAe1B,KAAK,CAACyB,aAAN,CAAoBC,MAAnC,GAA4C,GAAtD,CAAjB;AACA1B,IAAAA,KAAK,CAACsB,oBAAN,CAA2BM,UAA3B;AACH,GAHD;;AAKA,QAAML,mBAAmB,GAAG,MAAM;AAC9B,QAAIQ,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAnB;AACA,QAAIC,aAAa,GAAG,CAACH,YAAY,GAAGvB,QAAhB,IAA4B,IAA5B,GAAmC,EAAvD;AACA,QAAI2B,GAAG,GAAGN,IAAI,CAACC,IAAL,CAAUpB,KAAK,CAACgB,MAAN,GAAeQ,aAAzB,CAAV;AAEAlC,IAAAA,KAAK,CAACuB,mBAAN,CAA0BY,GAA1B;AACH,GAND;;AAQA,QAAMd,cAAc,GAAG,MAAM;AACzB,QAAIX,KAAK,CAACgB,MAAN,KAAiB1B,KAAK,CAACyB,aAAN,CAAoBC,MAAzC,EAAiD;AAC7CnB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GALD;;AAOA,QAAMkC,YAAY,GAAG,MAAM;AACvB3B,IAAAA,eAAe,CAAC,CAAD,CAAf;AACAP,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAK,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AAEAX,IAAAA,KAAK,CAACoC,YAAN;AACH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAEzC,KAAK,CAAC0C,QAAtB;AAAA,4BACI;AAAO,MAAA,SAAS,MAAhB;AACI,MAAA,KAAK,EAAE3B,KADX;AAEI,MAAA,QAAQ,EAAET,UAFd;AAGI,MAAA,QAAQ,EAAEW;AAHd;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,WAAD;AAAa,MAAA,aAAa,EAAEZ,KAAK,CAACyB,aAAlC;AAAiD,MAAA,KAAK,EAAEf;AAAxD;AAAA;AAAA;AAAA;AAAA,YAPJ,EASKT,UAAU,iBAAI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEK,MAArB;AAA6B,MAAA,YAAY,EAAE8B;AAA3C;AAAA;AAAA;AAAA;AAAA,YATnB,EAWKhC,YAAY,iBAAI,QAAC,YAAD;AAAc,MAAA,aAAa,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAXrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1FD;;GAAMN,W;;KAAAA,W;AA4FN,eAAeA,WAAf,C,CAEQ;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport FinishBoard from '../Board/FinishBoard';\r\nimport style from './CustomInput.module.css';\r\nimport ChangeLayout from '../common/ChangeLayout';\r\nimport DisplayText from '../Display/DisplayText';\r\n\r\nlet allowedSymbols = [\r\n    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\r\n    'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\r\n    'u', 'v', 'w', 'x', 'y', 'z',\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\r\n    'U', 'V', 'W', 'X', 'Y', 'Z',\r\n    '1', '2', '3', '4', '5', '6', '7', '8', '9', '0',\r\n    ',', '.', `'`, ' ', ';', ':'\r\n];\r\n\r\nconst CustomInput = (props) => {\r\n    const [isDisabled, handleDisable] = React.useState(false);\r\n    const [changeLayout, changeLayoutHandler] = React.useState(false);\r\n    const [result, changeResult] = React.useState(false);\r\n    const [msPassed, msPassedHandler] = React.useState(0);\r\n    const [value, changeValue] = React.useState('');\r\n\r\n    // React.useEffect(() => {\r\n    //     if (value.length === 1) {\r\n    //         msPassedHandler(new Date().getTime());\r\n    //         var interval = setInterval(() => { charactersPerMinute() }, 3000);\r\n    //     };\r\n    //     return () => clearInterval(interval);\r\n    // });\r\n\r\n    const handleChange = (event) => {\r\n        changeValue(event.target.value)\r\n        console.log(value)\r\n        props.passLastLetter(value.slice(-1));\r\n\r\n        if (allowedSymbols.includes(value.slice(-1))) {\r\n            handleMistake();\r\n            handleComplete();\r\n            completionPercentage();\r\n            charactersPerMinute();\r\n\r\n        } else {\r\n            changeLayoutHandler(true);\r\n            console.log(value)\r\n            // handleDisable(true);\r\n        }\r\n    };\r\n\r\n    const handleMistake = () => {\r\n        if (props.numberOfMistake === 2) {\r\n            handleDisable(true);\r\n        }\r\n\r\n        if (value.slice(-1) !== props.generatedText[value.length - 1]) {\r\n            props.mistakeCounter();\r\n            props.handleMistake(true);\r\n        } else {\r\n            props.handleMistake(false);\r\n        }\r\n    };\r\n\r\n    const completionPercentage = () => {\r\n        let percentage = Math.ceil(value.length / props.generatedText.length * 100);\r\n        props.completionPercentage(percentage);\r\n    };\r\n\r\n    const charactersPerMinute = () => {\r\n        let timePassedMs = new Date().getTime();\r\n        let timePassedMin = (timePassedMs - msPassed) / 1000 / 60;\r\n        let cpm = Math.ceil(value.length / timePassedMin);\r\n\r\n        props.charactersPerMinute(cpm);\r\n    };\r\n\r\n    const handleComplete = () => {\r\n        if (value.length === props.generatedText.length) {\r\n            changeResult(true);\r\n            handleDisable(true);\r\n        }\r\n    };\r\n\r\n    const reloadLesson = () => {\r\n        msPassedHandler(0);\r\n        handleDisable(false);\r\n        changeResult(false);\r\n        changeValue('');\r\n\r\n        props.reloadLesson();\r\n    }\r\n\r\n    return (\r\n        <div className={style.InputBox}>\r\n            <input autoFocus\r\n                value={value}\r\n                disabled={isDisabled}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            <DisplayText generatedText={props.generatedText} value={value} />\r\n\r\n            {isDisabled && <FinishBoard result={result} reloadLesson={reloadLesson} />}\r\n\r\n            {changeLayout && <ChangeLayout layoutHandler={changeLayoutHandler} />}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CustomInput;\r\n\r\n        // let finishText = document.getElementById('finishText');\r\n        // let leftText = document.getElementById('leftText');\r\n        // let inputField = document.getElementById('inputField');\r\n\r\n        // finishText.textContent = '';\r\n        // leftText.textContent = '';\r\n        // inputField.value = '';"]},"metadata":{},"sourceType":"module"}