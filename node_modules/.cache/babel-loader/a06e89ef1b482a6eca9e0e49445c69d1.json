{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\wanna-type\\\\src\\\\Components\\\\CustomInput\\\\CustomInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as PropTypes from 'prop-types';\nimport FinishBoard from '../Board/FinishBoard';\nimport style from './CustomInput.module.css';\nimport ChangeLayout from '../common/ChangeLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomInput1 = props => {\n  _s();\n\n  const [disabled, handleDisable] = React.useState(false);\n  const [changeLayout, changeLayoutHandler] = React.useState(false);\n  const [result, changeResult] = React.useState(false);\n  const [msPassed, msPassedHandler] = React.useState(0);\n\n  const handleChange = event => {\n    let inputValue = event.target.value;\n    let generatedText = props.generatedText;\n    let allowedSymbols = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', ',', '.', `'`, ' ', ';', ':'];\n\n    if (inputValue.length === 1) {\n      msPassedHandler(new Date().getTime());\n    }\n\n    if (allowedSymbols.includes(inputValue.slice(-1))) {\n      handleMistake(inputValue, generatedText);\n      handleComplete(inputValue, generatedText);\n      completionPercentage(inputValue, generatedText);\n      charactersPerMinute(inputValue);\n      carriage();\n      props.passLastLetter(inputValue.slice(-1));\n    } else {\n      layoutHandler(true);\n    }\n  };\n\n  const handleMistake = (inputValue, generatedText) => {\n    if (props.numberOfMistake === 2) {\n      handleDisable();\n    }\n\n    if (inputValue.slice(-1) !== generatedText[inputValue.length - 1]) {\n      props.mistakeCounter();\n      props.handleMistake(true);\n    } else {\n      props.handleMistake(false);\n    }\n  };\n\n  const completionPercentage = (inputValue, generatedText) => {\n    let percentage = Math.ceil(inputValue.length / generatedText.length * 100);\n    this.props.completionPercentage(percentage);\n  };\n\n  const charactersPerMinute = inputValue => {\n    let startTimeMs = this.state.startTimeMs;\n    let timePassedMs = new Date().getTime();\n    let timePassedMin = (timePassedMs - startTimeMs) / 1000 / 60;\n    let cpm = Math.ceil(inputValue.length / timePassedMin);\n    this.props.charactersPerMinute(cpm);\n  };\n\n  const handleComplete = (inputValue, generatedText) => {\n    if (inputValue.length === generatedText.length) {\n      this.setState({\n        result: true\n      });\n      this.handleDisable();\n    }\n  };\n};\n\n_s(CustomInput1, \"bpd84zjEIvQ78J9ioFfc0Gy3rsU=\");\n\n_c = CustomInput1;\n\nclass CustomInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      let inputValue = event.target.value;\n      let generatedText = this.props.generatedText;\n      let allowedSymbols = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', ',', '.', `'`, ' ', ';', ':'];\n\n      if (inputValue.length === 1) {\n        this.setState({\n          startTimeMs: new Date().getTime()\n        });\n      }\n\n      if (allowedSymbols.includes(inputValue.slice(-1))) {\n        this.handleMistake(inputValue, generatedText);\n        this.handleComplete(inputValue, generatedText);\n        this.completionPercentage(inputValue, generatedText);\n        this.charactersPerMinute(inputValue);\n        this.carriage();\n        this.props.passLastLetter(inputValue.slice(-1));\n      } else {\n        this.layoutHandler(true);\n      }\n    };\n\n    this.handleMistake = (inputValue, generatedText) => {\n      if (this.props.numberOfMistake === 2) {\n        this.handleDisable();\n      }\n\n      if (inputValue.slice(-1) !== generatedText[inputValue.length - 1]) {\n        this.props.mistakeCounter();\n        this.props.handleMistake(true);\n      } else {\n        this.props.handleMistake(false);\n      }\n    };\n\n    this.completionPercentage = (inputValue, generatedText) => {\n      let percentage = Math.ceil(inputValue.length / generatedText.length * 100);\n      this.props.completionPercentage(percentage);\n    };\n\n    this.charactersPerMinute = inputValue => {\n      let startTimeMs = this.state.startTimeMs;\n      let timePassedMs = new Date().getTime();\n      let timePassedMin = (timePassedMs - startTimeMs) / 1000 / 60;\n      let cpm = Math.ceil(inputValue.length / timePassedMin);\n      this.props.charactersPerMinute(cpm);\n    };\n\n    this.handleComplete = (inputValue, generatedText) => {\n      if (inputValue.length === generatedText.length) {\n        this.setState({\n          result: true\n        });\n        this.handleDisable();\n      }\n    };\n\n    this.handleDisable = () => {\n      this.setState({\n        disabled: true\n      });\n    };\n\n    this.layoutHandler = boolean => {\n      this.setState({\n        changeLayout: boolean\n      });\n    };\n\n    this.carriage = () => {\n      let leftText = document.getElementById('leftText');\n      let finishText = document.getElementById('finishText');\n      finishText.textContent += leftText.textContent[0];\n      leftText.textContent = leftText.textContent.slice(1);\n    };\n\n    this.reloadLesson = () => {\n      this.setState({\n        startTimeMs: 0,\n        changeLayout: false,\n        disabled: false,\n        result: false\n      });\n      let finishText = document.getElementById('finishText');\n      let leftText = document.getElementById('leftText');\n      let inputField = document.getElementById('inputField');\n      finishText.textContent = '';\n      leftText.textContent = '';\n      inputField.value = '';\n      this.props.reloadLesson();\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.InputBox,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoFocus: true,\n          disabled: this.state.disabled,\n          onChange: this.handleChange,\n          id: \"inputField\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.displayText,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"finishText\",\n            className: style.cursor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"leftText\",\n            className: style.unfinishedText,\n            children: this.props.generatedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this), this.state.disabled && /*#__PURE__*/_jsxDEV(FinishBoard, {\n          result: this.state.result,\n          reloadLesson: this.reloadLesson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 41\n        }, this), this.state.changeLayout && /*#__PURE__*/_jsxDEV(ChangeLayout, {\n          layoutHandler: this.layoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      startTimeMs: 0,\n      changeLayout: false,\n      disabled: false,\n      result: false\n    };\n  }\n\n}\n\nCustomInput.propTypes = {\n  generatedText: PropTypes.string,\n  reloadLesson: PropTypes.func,\n  numberOfMistake: PropTypes.number,\n  handleMistake: PropTypes.func,\n  mistakeCounter: PropTypes.func,\n  completionPercentage: PropTypes.func,\n  charactersPerMinute: PropTypes.func,\n  passLastLetter: PropTypes.func\n};\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput1\");","map":{"version":3,"sources":["C:/projects/wanna-type/src/Components/CustomInput/CustomInput.jsx"],"names":["React","PropTypes","FinishBoard","style","ChangeLayout","CustomInput1","props","disabled","handleDisable","useState","changeLayout","changeLayoutHandler","result","changeResult","msPassed","msPassedHandler","handleChange","event","inputValue","target","value","generatedText","allowedSymbols","length","Date","getTime","includes","slice","handleMistake","handleComplete","completionPercentage","charactersPerMinute","carriage","passLastLetter","layoutHandler","numberOfMistake","mistakeCounter","percentage","Math","ceil","startTimeMs","state","timePassedMs","timePassedMin","cpm","setState","CustomInput","Component","constructor","boolean","leftText","document","getElementById","finishText","textContent","reloadLesson","inputField","render","InputBox","displayText","cursor","unfinishedText","propTypes","string","func","number"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport FinishBoard from '../Board/FinishBoard';\r\nimport style from './CustomInput.module.css';\r\nimport ChangeLayout from '../common/ChangeLayout';\r\n\r\n\r\nconst CustomInput1 = (props) => {\r\n    const [disabled, handleDisable] = React.useState(false);\r\n    const [changeLayout, changeLayoutHandler] = React.useState(false);\r\n    const [result, changeResult] = React.useState(false);\r\n    const [msPassed, msPassedHandler] = React.useState(0);\r\n\r\n    const handleChange = (event) => {\r\n        let inputValue = event.target.value;\r\n        let generatedText = props.generatedText;\r\n\r\n        let allowedSymbols = [\r\n            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\r\n            'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\r\n            'u', 'v', 'w', 'x', 'y', 'z',\r\n            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',\r\n            'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\r\n            'U', 'V', 'W', 'X', 'Y', 'Z',\r\n            '1', '2', '3', '4', '5', '6', '7', '8', '9', '0',\r\n            ',', '.', `'`, ' ', ';', ':'\r\n        ];\r\n\r\n        if (inputValue.length === 1) {\r\n            msPassedHandler(new Date().getTime());\r\n        }\r\n\r\n        if (allowedSymbols.includes(inputValue.slice(-1))) {\r\n            handleMistake(inputValue, generatedText);\r\n            handleComplete(inputValue, generatedText);\r\n            completionPercentage(inputValue, generatedText);\r\n            charactersPerMinute(inputValue);\r\n\r\n            carriage();\r\n            props.passLastLetter(inputValue.slice(-1));\r\n\r\n        } else {\r\n            layoutHandler(true);\r\n        }\r\n    };\r\n\r\n    const handleMistake = (inputValue, generatedText) => {\r\n\r\n        if (props.numberOfMistake === 2) {\r\n            handleDisable();\r\n        }\r\n\r\n        if (inputValue.slice(-1) !== generatedText[inputValue.length - 1]) {\r\n            props.mistakeCounter();\r\n            props.handleMistake(true);\r\n        } else {\r\n            props.handleMistake(false);\r\n        }\r\n    };\r\n\r\n    const completionPercentage = (inputValue, generatedText) => {\r\n        let percentage = Math.ceil(inputValue.length / generatedText.length * 100);\r\n        this.props.completionPercentage(percentage);\r\n    }\r\n\r\n    const charactersPerMinute = (inputValue) => {\r\n        let startTimeMs = this.state.startTimeMs;\r\n\r\n        let timePassedMs = new Date().getTime();\r\n        let timePassedMin = (timePassedMs - startTimeMs) / 1000 / 60;\r\n        let cpm = Math.ceil(inputValue.length / timePassedMin);\r\n\r\n        this.props.charactersPerMinute(cpm);\r\n    }\r\n\r\n    const handleComplete = (inputValue, generatedText) => {\r\n        if (inputValue.length === generatedText.length) {\r\n            this.setState({ result: true });\r\n            this.handleDisable();\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\nclass CustomInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            startTimeMs: 0,\r\n            changeLayout: false,\r\n            disabled: false,\r\n            result: false,\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let inputValue = event.target.value;\r\n        let generatedText = this.props.generatedText;\r\n\r\n        let allowedSymbols = [\r\n            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\r\n            'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\r\n            'u', 'v', 'w', 'x', 'y', 'z',\r\n            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',\r\n            'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\r\n            'U', 'V', 'W', 'X', 'Y', 'Z',\r\n            '1', '2', '3', '4', '5', '6', '7', '8', '9', '0',\r\n            ',', '.', `'`, ' ', ';', ':'\r\n        ];\r\n\r\n        if (inputValue.length === 1) {\r\n            this.setState({ startTimeMs: new Date().getTime() });\r\n        }\r\n\r\n        if (allowedSymbols.includes(inputValue.slice(-1))) {\r\n            this.handleMistake(inputValue, generatedText);\r\n            this.handleComplete(inputValue, generatedText);\r\n            this.completionPercentage(inputValue, generatedText);\r\n            this.charactersPerMinute(inputValue);\r\n\r\n            this.carriage();\r\n            this.props.passLastLetter(inputValue.slice(-1));\r\n\r\n        } else {\r\n            this.layoutHandler(true);\r\n        }\r\n    }\r\n\r\n    handleMistake = (inputValue, generatedText) => {\r\n\r\n        if (this.props.numberOfMistake === 2) {\r\n            this.handleDisable();\r\n        }\r\n\r\n        if (inputValue.slice(-1) !== generatedText[inputValue.length - 1]) {\r\n            this.props.mistakeCounter();\r\n            this.props.handleMistake(true);\r\n        } else {\r\n            this.props.handleMistake(false);\r\n        }\r\n    }\r\n\r\n    completionPercentage = (inputValue, generatedText) => {\r\n        let percentage = Math.ceil(inputValue.length / generatedText.length * 100);\r\n        this.props.completionPercentage(percentage);\r\n    }\r\n\r\n    charactersPerMinute = (inputValue) => {\r\n        let startTimeMs = this.state.startTimeMs;\r\n\r\n        let timePassedMs = new Date().getTime();\r\n        let timePassedMin = (timePassedMs - startTimeMs) / 1000 / 60;\r\n        let cpm = Math.ceil(inputValue.length / timePassedMin);\r\n\r\n        this.props.charactersPerMinute(cpm);\r\n    }\r\n\r\n    handleComplete = (inputValue, generatedText) => {\r\n        if (inputValue.length === generatedText.length) {\r\n            this.setState({ result: true });\r\n            this.handleDisable();\r\n        }\r\n    }\r\n\r\n    handleDisable = () => {\r\n        this.setState({ disabled: true });\r\n    }\r\n\r\n    layoutHandler = (boolean) => {\r\n        this.setState({ changeLayout: boolean })\r\n    }\r\n\r\n    carriage = () => {\r\n        let leftText = document.getElementById('leftText');\r\n        let finishText = document.getElementById('finishText');\r\n\r\n        finishText.textContent += leftText.textContent[0];\r\n        leftText.textContent = leftText.textContent.slice(1);\r\n    }\r\n\r\n    reloadLesson = () => {\r\n        this.setState({\r\n            startTimeMs: 0,\r\n            changeLayout: false,\r\n            disabled: false,\r\n            result: false,\r\n        });\r\n\r\n        let finishText = document.getElementById('finishText');\r\n        let leftText = document.getElementById('leftText');\r\n        let inputField = document.getElementById('inputField');\r\n\r\n        finishText.textContent = '';\r\n        leftText.textContent = '';\r\n        inputField.value = '';\r\n\r\n        this.props.reloadLesson();\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={style.InputBox}>\r\n                <input autoFocus\r\n                    disabled={this.state.disabled}\r\n                    onChange={this.handleChange}\r\n                    id='inputField'\r\n                />\r\n                <span className={style.displayText}>\r\n                    <span id='finishText' className={style.cursor} />\r\n                    <span id='leftText' className={style.unfinishedText}>{this.props.generatedText}</span>\r\n                </span>\r\n\r\n                {this.state.disabled && <FinishBoard result={this.state.result} reloadLesson={this.reloadLesson} />}\r\n\r\n                {this.state.changeLayout && <ChangeLayout layoutHandler={this.layoutHandler} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCustomInput.propTypes = {\r\n    generatedText: PropTypes.string,\r\n    reloadLesson: PropTypes.func,\r\n\r\n    numberOfMistake: PropTypes.number,\r\n    handleMistake: PropTypes.func,\r\n    mistakeCounter: PropTypes.func,\r\n\r\n    completionPercentage: PropTypes.func,\r\n    charactersPerMinute: PropTypes.func,\r\n\r\n    passLastLetter: PropTypes.func\r\n}\r\n\r\nexport default CustomInput;"]},"metadata":{},"sourceType":"module"}