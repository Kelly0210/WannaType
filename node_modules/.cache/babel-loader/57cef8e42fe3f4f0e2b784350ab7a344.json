{"ast":null,"code":"export const generateLesson = function () {\n  let initialUnits = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let numberOfUnits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;\n  let unitsForSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n  let generatedLesson = \"\";\n\n  if (initialUnits[0].length > 1) {\n    for (let i = 0; i < numberOfUnits; i++) {\n      let randomWord = initialUnits[Math.floor(Math.random() * initialUnits.length)];\n      generatedLesson += \" \" + randomWord;\n    }\n\n    return generatedLesson.slice(1);\n  } else {\n    for (let i = 0; i < numberOfUnits; i++) {\n      let generateLetter = initialUnits[Math.floor(Math.random() * initialUnits.length)];\n      generatedLesson += generateLetter; // RegEx delete all already created spaces\n\n      if (generatedLesson.replace(/ /g, '').length % unitsForSpace === 0) {\n        generatedLesson += \" \";\n      }\n    }\n\n    return generatedLesson;\n  }\n};","map":{"version":3,"sources":["C:/projects/wanna-type/src/common/generateLesson.js"],"names":["generateLesson","initialUnits","numberOfUnits","unitsForSpace","generatedLesson","length","i","randomWord","Math","floor","random","slice","generateLetter","replace"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,YAA8D;AAAA,MAA7DC,YAA6D,uEAA9C,EAA8C;AAAA,MAA1CC,aAA0C,uEAA1B,EAA0B;AAAA,MAAtBC,aAAsB,uEAAN,CAAM;AACxF,MAAIC,eAAe,GAAG,EAAtB;;AAEA,MAAIH,YAAY,CAAC,CAAD,CAAZ,CAAgBI,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAApB,EAAmCI,CAAC,EAApC,EAAwC;AACpC,UAAIC,UAAU,GAAGN,YAAY,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,YAAY,CAACI,MAAxC,CAAD,CAA7B;AACAD,MAAAA,eAAe,IAAI,MAAMG,UAAzB;AACH;;AACD,WAAOH,eAAe,CAACO,KAAhB,CAAsB,CAAtB,CAAP;AACH,GAND,MAMO;AACH,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAApB,EAAmCI,CAAC,EAApC,EAAwC;AACpC,UAAIM,cAAc,GAAGX,YAAY,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,YAAY,CAACI,MAAxC,CAAD,CAAjC;AACAD,MAAAA,eAAe,IAAIQ,cAAnB,CAFoC,CAIpC;;AACA,UAAIR,eAAe,CAACS,OAAhB,CAAwB,IAAxB,EAA8B,EAA9B,EAAkCR,MAAlC,GAA2CF,aAA3C,KAA6D,CAAjE,EAAoE;AAChEC,QAAAA,eAAe,IAAI,GAAnB;AACH;AACJ;;AACD,WAAOA,eAAP;AACH;AAEJ,CAtBM","sourcesContent":["export const generateLesson = (initialUnits = \"\", numberOfUnits = 60, unitsForSpace = 4) => {\r\n    let generatedLesson = \"\";\r\n\r\n    if (initialUnits[0].length > 1) {\r\n        for (let i = 0; i < numberOfUnits; i++) {\r\n            let randomWord = initialUnits[Math.floor(Math.random() * initialUnits.length)];\r\n            generatedLesson += \" \" + randomWord;\r\n        }\r\n        return generatedLesson.slice(1);\r\n    } else {\r\n        for (let i = 0; i < numberOfUnits; i++) {\r\n            let generateLetter = initialUnits[Math.floor(Math.random() * initialUnits.length)];\r\n            generatedLesson += generateLetter;\r\n\r\n            // RegEx delete all already created spaces\r\n            if (generatedLesson.replace(/ /g, '').length % unitsForSpace === 0) {\r\n                generatedLesson += \" \";\r\n            }\r\n        }\r\n        return generatedLesson;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}