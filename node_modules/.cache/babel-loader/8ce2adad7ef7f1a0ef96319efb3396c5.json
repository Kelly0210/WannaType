{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\wanna-type\\\\src\\\\Components\\\\CustomInput\\\\CustomInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as PropTypes from 'prop-types';\nimport FinishBoard from '../Board/FinishBoard';\nimport style from './CustomInput.module.css';\nimport ChangeLayout from '../common/ChangeLayout';\nimport DisplayText from '../Display/DisplayText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allowedSymbols = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', ',', '.', `'`, ' ', ';', ':'];\n\nconst CustomInput = _ref => {\n  _s();\n\n  let {\n    generatedText,\n    numberOfMistakes,\n    passLastLetter\n  } = _ref;\n  const [isDisabled, handleDisable] = React.useState(false);\n  const [changeLayout, changeLayoutHandler] = React.useState(false);\n  const [result, changeResult] = React.useState(false);\n  const [msPassed, msPassedHandler] = React.useState(0); // React.useEffect(() => {\n  //     if (value.length === 1) {\n  //         msPassedHandler(new Date().getTime());\n  //         var interval = setInterval(() => { charactersPerMinute() }, 3000);\n  //     };\n  //     return () => clearInterval(interval);\n  // });\n\n  function handleChange(event) {\n    let inputValue = event.target.value;\n\n    if (allowedSymbols.includes(inputValue.slice(-1))) {\n      handleMistake(inputValue);\n      handleComplete(inputValue);\n      completionPercentage(inputValue);\n      charactersPerMinute(inputValue);\n      props.passLastLetter(inputValue.slice(-1));\n    } else {\n      changeLayoutHandler(true);\n      handleDisable(true);\n    }\n  }\n\n  ;\n\n  const handleMistake = inputValue => {\n    if (numberOfMistakes === 2) {\n      handleDisable(true);\n      changeResult(false);\n    }\n\n    if (inputValue.slice(-1) !== generatedText[inputValue.length - 1]) {\n      props.mistakeCounter();\n      props.handleMistake(true);\n    } else {\n      props.handleMistake(false);\n    }\n  };\n\n  const completionPercentage = inputValue => {\n    let percentage = Math.ceil(inputValue.length / generatedText.length * 100);\n    props.completionPercentage(percentage);\n  };\n\n  const charactersPerMinute = inputValue => {\n    let timePassedMs = new Date().getTime();\n    let timePassedMin = (timePassedMs - msPassed) / 1000 / 60;\n    let CPM = Math.ceil(inputValue.length / timePassedMin);\n    props.charactersPerMinute(CPM);\n  };\n\n  const handleComplete = inputValue => {\n    if (inputValue.length === generatedText.length) {\n      changeResult(true);\n      handleDisable(true);\n    }\n  };\n\n  const reloadLesson = () => {\n    msPassedHandler(0);\n    handleDisable(false);\n    changeResult(false);\n    let inputField = document.getElementById('input');\n    inputField.textContent = '';\n    props.reloadLesson();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.InputBox,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      disabled: isDisabled,\n      onChange: handleChange,\n      id: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayText, {\n      generatedText: generatedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), isDisabled && /*#__PURE__*/_jsxDEV(FinishBoard, {\n      result: result,\n      reloadLesson: reloadLesson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 28\n    }, this), changeLayout && /*#__PURE__*/_jsxDEV(ChangeLayout, {\n      layoutHandler: changeLayoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomInput, \"iJYFIEIXY5E97WYofZY+lwJWtl8=\");\n\n_c = CustomInput;\nexport default CustomInput; // let finishText = document.getElementById('finishText');\n// let leftText = document.getElementById('leftText');\n// let inputField = document.getElementById('inputField');\n// finishText.textContent = '';\n// leftText.textContent = '';\n// inputField.value = '';\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["C:/projects/wanna-type/src/Components/CustomInput/CustomInput.jsx"],"names":["React","PropTypes","FinishBoard","style","ChangeLayout","DisplayText","allowedSymbols","CustomInput","generatedText","numberOfMistakes","passLastLetter","isDisabled","handleDisable","useState","changeLayout","changeLayoutHandler","result","changeResult","msPassed","msPassedHandler","handleChange","event","inputValue","target","value","includes","slice","handleMistake","handleComplete","completionPercentage","charactersPerMinute","props","length","mistakeCounter","percentage","Math","ceil","timePassedMs","Date","getTime","timePassedMin","CPM","reloadLesson","inputField","document","getElementById","textContent","InputBox"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport FinishBoard from '../Board/FinishBoard';\r\nimport style from './CustomInput.module.css';\r\nimport ChangeLayout from '../common/ChangeLayout';\r\nimport DisplayText from '../Display/DisplayText';\r\n\r\nlet allowedSymbols = [\r\n    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\r\n    'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\r\n    'u', 'v', 'w', 'x', 'y', 'z',\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',\r\n    'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\r\n    'U', 'V', 'W', 'X', 'Y', 'Z',\r\n    '1', '2', '3', '4', '5', '6', '7', '8', '9', '0',\r\n    ',', '.', `'`, ' ', ';', ':'\r\n];\r\n\r\nconst CustomInput = ({ generatedText, numberOfMistakes, passLastLetter}) => {\r\n\r\n    const [isDisabled, handleDisable] = React.useState(false);\r\n    const [changeLayout, changeLayoutHandler] = React.useState(false);\r\n    const [result, changeResult] = React.useState(false);\r\n    const [msPassed, msPassedHandler] = React.useState(0);\r\n\r\n    // React.useEffect(() => {\r\n    //     if (value.length === 1) {\r\n    //         msPassedHandler(new Date().getTime());\r\n    //         var interval = setInterval(() => { charactersPerMinute() }, 3000);\r\n    //     };\r\n    //     return () => clearInterval(interval);\r\n    // });\r\n\r\n    function handleChange(event) {\r\n        let inputValue = event.target.value;\r\n\r\n        if (allowedSymbols.includes(inputValue.slice(-1))) {\r\n            handleMistake(inputValue);\r\n            handleComplete(inputValue);\r\n            completionPercentage(inputValue);\r\n            charactersPerMinute(inputValue);\r\n\r\n            props.passLastLetter(inputValue.slice(-1));\r\n        } else {\r\n            changeLayoutHandler(true);\r\n            handleDisable(true);\r\n        }\r\n    };\r\n\r\n    const handleMistake = (inputValue) => {\r\n        if (numberOfMistakes === 2) {\r\n            handleDisable(true);\r\n            changeResult(false);\r\n        }\r\n\r\n        if (inputValue.slice(-1) !== generatedText[inputValue.length - 1]) {\r\n            props.mistakeCounter();\r\n            props.handleMistake(true);\r\n        } else {\r\n            props.handleMistake(false);\r\n        }\r\n    };\r\n\r\n    const completionPercentage = (inputValue) => {\r\n        let percentage = Math.ceil(inputValue.length / generatedText.length * 100);\r\n        props.completionPercentage(percentage);\r\n    };\r\n\r\n    const charactersPerMinute = (inputValue) => {\r\n        let timePassedMs = new Date().getTime();\r\n        let timePassedMin = (timePassedMs - msPassed) / 1000 / 60;\r\n        let CPM = Math.ceil(inputValue.length / timePassedMin);\r\n\r\n        props.charactersPerMinute(CPM);\r\n    };\r\n\r\n    const handleComplete = (inputValue) => {\r\n        if (inputValue.length === generatedText.length) {\r\n            changeResult(true);\r\n            handleDisable(true);\r\n        }\r\n    };\r\n\r\n    const reloadLesson = () => {\r\n        msPassedHandler(0);\r\n        handleDisable(false);\r\n        changeResult(false);\r\n\r\n        let inputField = document.getElementById('input');\r\n        inputField.textContent = '';\r\n\r\n        props.reloadLesson();\r\n    }\r\n\r\n    return (\r\n        <div className={style.InputBox}>\r\n            <input autoFocus\r\n                disabled={isDisabled}\r\n                onChange={handleChange}\r\n                id='input'\r\n            />\r\n\r\n            <DisplayText generatedText={generatedText} />\r\n\r\n            {isDisabled && <FinishBoard result={result} reloadLesson={reloadLesson} />}\r\n\r\n            {changeLayout && <ChangeLayout layoutHandler={changeLayoutHandler} />}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CustomInput;\r\n\r\n        // let finishText = document.getElementById('finishText');\r\n        // let leftText = document.getElementById('leftText');\r\n        // let inputField = document.getElementById('inputField');\r\n\r\n        // finishText.textContent = '';\r\n        // leftText.textContent = '';\r\n        // inputField.value = '';"]},"metadata":{},"sourceType":"module"}