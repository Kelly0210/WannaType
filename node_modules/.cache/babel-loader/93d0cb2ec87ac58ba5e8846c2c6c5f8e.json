{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\wanna-type\\\\src\\\\Components\\\\CustomInput\\\\CustomInput.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport * as PropTypes from 'prop-types';\nimport FinishBoard from '../Board/FinishBoard';\nimport DisplayText from '../Display/DisplayText';\nimport style from './CustomInput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomInput = props => {\n  _s();\n\n  const [isDisabled, disableInput] = React.useState(false);\n  const [isPassed, passedResult] = React.useState(false);\n  const [startTimeMs, setStopwatch] = React.useState(0);\n  const [value, changeValue] = React.useState('');\n  React.useEffect(() => {\n    if (value.length !== 0) {\n      props.passLastLetter(value.slice(-1));\n    }\n  }, [value]);\n  React.useEffect(() => {\n    if (value.slice(-1) !== props.generatedText[value.length - 1]) {\n      props.mistakeCounter();\n    }\n\n    if (props.numberOfMistakes === 3) {\n      disableInput(true);\n      passedResult(false);\n    }\n  }, [value]);\n  React.useEffect(() => {\n    if (value.length === 1) {\n      setStopwatch(new Date().getTime());\n    }\n\n    if (value.length !== 0) {\n      let timePassedMs = new Date().getTime();\n      let timePassedMin = (timePassedMs - startTimeMs) / 1000 / 60;\n      let CPM = Math.ceil(value.length / timePassedMin);\n      props.charactersPerMinute(CPM);\n    }\n  }, [value.length]);\n  React.useEffect(() => {\n    if (value.length === props.generatedText.length) {\n      passedResult(true);\n      disableInput(true);\n    }\n  }, [value.length, props.generatedText.length]);\n  React.useEffect(() => {\n    let percentage = Math.ceil(value.length / props.generatedText.length * 100);\n    props.completionPercentage(percentage);\n  });\n\n  const reloadLesson = () => {\n    setStopwatch(0);\n    disableInput(false);\n    passedResult(false);\n    changeValue('');\n    props.reloadLesson();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.InputBox,\n    children: [/*#__PURE__*/_jsxDEV(DisplayText, {\n      generatedText: props.generatedText,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      value: value,\n      disabled: isDisabled,\n      onChange: event => changeValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), isDisabled && /*#__PURE__*/_jsxDEV(FinishBoard, {\n      isPassed: isPassed,\n      reloadLesson: reloadLesson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomInput, \"DtYBRnqU/8ectXXcpOgevk0QYu0=\");\n\n_c = CustomInput;\nCustomInput.propTypes = {\n  generatedText: PropTypes.string,\n  reloadLesson: PropTypes.func,\n  numberOfMistake: PropTypes.number,\n  handleMistake: PropTypes.func,\n  mistakeCounter: PropTypes.func,\n  completionPercentage: PropTypes.func,\n  charactersPerMinute: PropTypes.func,\n  passLastLetter: PropTypes.func\n};\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["C:/projects/wanna-type/src/Components/CustomInput/CustomInput.jsx"],"names":["React","PropTypes","FinishBoard","DisplayText","style","CustomInput","props","isDisabled","disableInput","useState","isPassed","passedResult","startTimeMs","setStopwatch","value","changeValue","useEffect","length","passLastLetter","slice","generatedText","mistakeCounter","numberOfMistakes","Date","getTime","timePassedMs","timePassedMin","CPM","Math","ceil","charactersPerMinute","percentage","completionPercentage","reloadLesson","InputBox","event","target","propTypes","string","func","numberOfMistake","number","handleMistake"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport FinishBoard from '../Board/FinishBoard';\r\nimport DisplayText from '../Display/DisplayText';\r\nimport style from './CustomInput.module.css';\r\n\r\nconst CustomInput = (props) => {\r\n    const [isDisabled, disableInput] = React.useState(false);\r\n    const [isPassed, passedResult] = React.useState(false);\r\n    const [startTimeMs, setStopwatch] = React.useState(0);\r\n    const [value, changeValue] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        if (value.length !== 0) {\r\n            props.passLastLetter(value.slice(-1));\r\n        }\r\n    }, [value]);\r\n\r\n    React.useEffect(() => {\r\n        if (value.slice(-1) !== props.generatedText[value.length - 1]) {\r\n            props.mistakeCounter();\r\n        }\r\n\r\n        if (props.numberOfMistakes === 3) {\r\n            disableInput(true);\r\n            passedResult(false);\r\n        }\r\n    }, [value]);\r\n\r\n    React.useEffect(() => {\r\n        if (value.length === 1) {\r\n            setStopwatch(new Date().getTime());\r\n        }\r\n        if (value.length !== 0) {\r\n            let timePassedMs = new Date().getTime();\r\n            let timePassedMin = (timePassedMs - startTimeMs) / 1000 / 60;\r\n            let CPM = Math.ceil(value.length / timePassedMin);\r\n\r\n            props.charactersPerMinute(CPM);\r\n        }\r\n    }, [value.length]);\r\n\r\n    React.useEffect(() => {\r\n        if (value.length === props.generatedText.length) {\r\n            passedResult(true);\r\n            disableInput(true);\r\n        }\r\n    }, [value.length, props.generatedText.length]);\r\n\r\n    React.useEffect(() => {\r\n        let percentage = Math.ceil(value.length / props.generatedText.length * 100);\r\n        props.completionPercentage(percentage);\r\n    });\r\n\r\n    const reloadLesson = () => {\r\n        setStopwatch(0);\r\n        disableInput(false);\r\n        passedResult(false);\r\n        changeValue('');\r\n\r\n        props.reloadLesson();\r\n    };\r\n\r\n    return (\r\n        <div className={style.InputBox}>\r\n            <DisplayText generatedText={props.generatedText} value={value} />\r\n\r\n            <input autoFocus\r\n                value={value}\r\n                disabled={isDisabled}\r\n                onChange={event => changeValue(event.target.value)} />\r\n\r\n            {isDisabled && <FinishBoard isPassed={isPassed} reloadLesson={reloadLesson} />}\r\n        </div>\r\n    )\r\n};\r\n\r\nCustomInput.propTypes = {\r\n    generatedText: PropTypes.string,\r\n    reloadLesson: PropTypes.func,\r\n\r\n    numberOfMistake: PropTypes.number,\r\n    handleMistake: PropTypes.func,\r\n    mistakeCounter: PropTypes.func,\r\n\r\n    completionPercentage: PropTypes.func,\r\n    charactersPerMinute: PropTypes.func,\r\n    passLastLetter: PropTypes.func\r\n};\r\n\r\nexport default CustomInput;"]},"metadata":{},"sourceType":"module"}